name: STIN - Build backend and frontend on pull request

on:
  push:
    branches: 
      - "main"
      - "*"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-pull-request"
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and test backend & frontend
    runs-on: ubuntu-latest
    env:
      LISTEN_ADDRESS: "0.0.0.0"
      HTTP_PORT: "8000"
      GEN_AI_KEY: ${{ secrets.GEN_AI_KEY }}
      FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
  
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
          docker ps

      - name: Install pytest in backend container
        run: docker-compose exec -T backend pip install pytest pytest-cov flask-testing pytest-mock

      - name: Run tests and collect coverage in backend container
        run: docker-compose exec -T backend pytest /tests --cov --junitxml=junit.xml -o junit_family=legacy

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run frontend tests
        run: |
          docker-compose exec -T frontend npm run test -- --coverage --coverageReporters=cobertura

      - name: Copy frontend coverage report
        run: |
          docker cp frontend:/frontend/coverage/cobertura-coverage.xml frontend/

      - name: Upload frontend coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
          files: frontend/coverage/cobertura-coverage.xml

      - name: Shut down Docker Compose
        run: docker-compose down
